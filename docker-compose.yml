services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - oauth-network
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
    depends_on:
      migration:
        condition: service_completed_successfully
    restart: unless-stopped
    deploy:
      replicas: ${API_REPLICAS:-1}
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  migration:
    build:
      context: .
      dockerfile: Dockerfile
    command:
    - sh
    - -c
    - |
      /app/.venv/bin/python -m alembic upgrade head
    networks:
      - oauth-network
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  postgres:
    image: postgres:17
    ports:
      - "5432:5432"
    networks:
      - oauth-network
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  oauth-network:
